log4j.rootLogger=warn

# Set up logging to include a file record of the output
# Note: the file is always created, even if there is 
# no actual output.
# log4j.rootLogger=info, stderr, R

# Example of switching on debug level logging for part of tree
log4j.logger.uk.ac.manchester.cs=info, R
log4j.logger.uk.ac.manchester.cs.pronto.PTBoxSuppData=debug
log4j.logger.uk.ac.manchester.cs.pronto.lp.CompactMIPColumnGeneratorImpl=debug
log4j.logger.uk.ac.manchester.cs.pronto.lp.CGLPGeneratorImpl=debug
log4j.logger.uk.ac.manchester.cs.pronto.lp.CCSetAnalyzerImpl2=debug
log4j.logger.uk.ac.manchester.cs.pronto.zpartition=debug

# Log format to standard out
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# Pattern to output the caller's category. Note that printing file
# name and/or line number is extremely slow.
log4j.appender.stderr.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n
# log4j.appender.stdout.layout.ConversionPattern=%5p (%c{1}) - %m%n

# Log format to standard error
log4j.appender.stderr=org.apache.log4j.ConsoleAppender
log4j.appender.stderr.target=System.err
log4j.appender.stderr.layout=org.apache.log4j.PatternLayout
# Pattern to output the caller's category. Note that printing file
# name and/or line number is extremely slow.
# log4j.appender.stderr.layout.ConversionPattern=%5p [%c{1}] - %m%n
log4j.appender.stderr.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n

# File based log output
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.append=false
log4j.appender.R.File=pronto.log
log4j.appender.R.MaxFileSize=10000KB
# Keep one backup file
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.layout=org.apache.log4j.PatternLayout
#org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n